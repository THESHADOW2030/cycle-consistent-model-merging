seed_index: 0

output_path: ${oc.env:PROJECT_ROOT}/output
dataset_path: ${oc.env:PROJECT_ROOT}/data

model_name: MLP
dataset: MNIST

sync_method: 'spectral' # 'stiefel', 'spectral', 'nmfSync'

model_symbols:
  - a
  - b
  - c
  # - d

model_seed:
  a: 1
  b: 2
  c: 3
  # d: 4

num_interpolation_steps: 3

datasets:
  train:
    _target_: torchvision.datasets.MNIST
    root: ${dataset_path}
    train: True
    download: True
    transform: ${transform}

  test:
    _target_: torchvision.datasets.MNIST
    root: ${dataset_path}
    train: False
    download: True
    transform: ${transform}

permutation_spec_builder:
  _target_: ccmm.matching.weight_matching.MLPPermutationSpecBuilder
  num_hidden_layers: 4

transform:
    _target_: torchvision.transforms.Compose
    transforms:
      - _target_: torchvision.transforms.ToTensor
      - _target_: torchvision.transforms.Normalize
        mean: [0.1307]
        std: [0.3081]

batch_size: 5000
model_identifier: ${model_name}
model_info_path:
  a: ${output_path}/${dataset}/${model_name}_${model_seed.a}.json
  b: ${output_path}/${dataset}/${model_name}_${model_seed.b}.json
  c: ${output_path}/${dataset}/${model_name}_${model_seed.c}.json
  # d: ${output_path}/${dataset}/${model_name}_${model_seed.d}.json

results_path: ${oc.env:PROJECT_ROOT}/results/${dataset}
